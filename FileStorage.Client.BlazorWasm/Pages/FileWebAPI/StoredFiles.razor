@page "/storedfiles/{page?}"
@using FileStorage.Models
@inject HttpClient Http
@inject IHttpClientFactory _httpClientFactory

<PageTitle>Image gallery</PageTitle>

<h1>Stored files collection</h1>

<p>Получает файлы (StoredFiles) из FileStorage.FileServer.WebAPI</p>

@if (images == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Preview</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var image in images)
            {
                <tr>
                    <td>@image</td>
                    <td><img src="@image" style="width:150px;"/></td>
                </tr>
            }
        </tbody>
    </table>

    <p>Page @curPage</p>

    <a onclick="@(async ()=> await Paginate())">Next</a>
}

@code {
    [Parameter]
    public string Page{ get; set; }

    private int curPage;

    private string[]? images;

    protected override async Task OnInitializedAsync()
    {
        if (!int.TryParse(Page, out curPage))
            curPage = 1;

        var httpClient = _httpClientFactory.CreateClient("FilesWebAPI");
        images = await httpClient.GetFromJsonAsync<string[]>("files?page="+curPage+"&count=20");
    }

    private async Task Paginate()
    {
        curPage++;

        var httpClient = _httpClientFactory.CreateClient("FilesWebAPI");
        images = await httpClient.GetFromJsonAsync<string[]>("files?page="+curPage+"&count=20");
    }
}